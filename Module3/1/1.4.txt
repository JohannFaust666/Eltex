#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/wait.h>

int main() {
    while (1) {
        // Выводим приглашение
        printf(">> ");
        
        // Считываем команду
        char input[256];
        fgets(input, 256, stdin);
        
        // Разбиваем команду на аргументы
        char *token = strtok(input, " \n");
        char *args[256];
        int i = 0;
        while (token != NULL) {
            args[i] = token;
            i++;
            token = strtok(NULL, " \n");
        }
        args[i] = NULL;
        
        // Проверяем наличие программы
        if (access(args[0], X_OK) != 0) {
            printf("Command not found.\n");
            continue;
        }
        
        // Создаем дочерний процесс для запуска программы
        pid_t pid = fork();
        
        if (pid < 0) {
            printf("Error: could not create child process.\n");
            continue;
        }
        
        if (pid == 0) {
            // Дочерний процесс
            execvp(args[0], args);
            printf("Error: could not execute command.\n");
            _exit(1);
        } else {
            // Родительский процесс
            wait(NULL);
        }
    }
    return 0;
}